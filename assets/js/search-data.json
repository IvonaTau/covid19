{
  
    
        "post0": {
            "title": "Confirmed cases and country trajectory charts for Lithuania",
            "content": "An Exception was encountered at &#39;In [15]&#39;. . Number of total cases in Lithuania . Logarithmic scale shows how fast the number of new cases each day is increasing. . Confirmed cases per 100 000 population. Orange line represents 25 virus cases per 100 000 people. . Daily new cases . Country trajectories for total cases . Compare how the growth rate is different from other countries and their trajectories. By days since 100th confirmed case. . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . Execution using papermill encountered an exception here and stopped: . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . New daily cases in other countries . Total cases per 100 000 .",
            "url": "https://ivonatau.github.io/covid19/jupyter/2020/03/30/lithuania.html",
            "relUrl": "/jupyter/2020/03/30/lithuania.html",
            "date": " • Mar 30, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Confirmed cases and country trajectory charts for Poland",
            "content": "An Exception was encountered at &#39;In [14]&#39;. . New daily cases . Number of total cases in Poland . Country trajectories for total cases . Compare how the growth rate is different from other countries and their trajectories. By days since 100th confirmed case. . Tip: Click (Shift+ for multiple) on countries in the legend to filter the visualization. . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . Execution using papermill encountered an exception here and stopped: . MaxRowsError Traceback (most recent call last) /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 371 372 try: --&gt; 373 dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs) 374 except jsonschema.ValidationError: 375 dct = None /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in to_dict(self, validate, ignore, context) 326 {k: v for k, v in self._kwds.items() if k not in ignore}, 327 validate=sub_validate, --&gt; 328 context=context, 329 ) 330 else: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 60 return { 61 k: _todict(v, validate, context) &gt; 62 for k, v in obj.items() 63 if v is not Undefined 64 } /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;dictcomp&gt;(.0) 61 k: _todict(v, validate, context) 62 for k, v in obj.items() &gt; 63 if v is not Undefined 64 } 65 elif hasattr(obj, &#34;to_dict&#34;): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in &lt;listcomp&gt;(.0) 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): &gt; 58 return [_todict(v, validate, context) for v in obj] 59 elif isinstance(obj, dict): 60 return { /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/schemapi.py in _todict(obj, validate, context) 54 &#34;&#34;&#34;Convert an object to a dict representation.&#34;&#34;&#34; 55 if isinstance(obj, SchemaBase): &gt; 56 return obj.to_dict(validate=validate, context=context) 57 elif isinstance(obj, (list, tuple, np.ndarray)): 58 return [_todict(v, validate, context) for v in obj] /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in to_dict(self, *args, **kwargs) 361 copy = self.copy(deep=False) 362 original_data = getattr(copy, &#34;data&#34;, Undefined) --&gt; 363 copy.data = _prepare_data(original_data, context) 364 365 if original_data is not Undefined: /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/v4/api.py in _prepare_data(data, context) 82 # convert dataframes or objects with __geo_interface__ to dict 83 if isinstance(data, pd.DataFrame) or hasattr(data, &#34;__geo_interface__&#34;): &gt; 84 data = _pipe(data, data_transformers.get()) 85 86 # convert string input to a URLData /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/vegalite/data.py in default_data_transformer(data, max_rows) 17 @curried.curry 18 def default_data_transformer(data, max_rows=5000): &gt; 19 return curried.pipe(data, limit_rows(max_rows=max_rows), to_values) 20 21 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in pipe(data, *funcs) 625 &#34;&#34;&#34; 626 for func in funcs: --&gt; 627 data = func(data) 628 return data 629 /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/toolz/functoolz.py in __call__(self, *args, **kwargs) 301 def __call__(self, *args, **kwargs): 302 try: --&gt; 303 return self._partial(*args, **kwargs) 304 except TypeError as exc: 305 if self._should_curry(args, kwargs, exc): /opt/hostedtoolcache/Python/3.6.12/x64/lib/python3.6/site-packages/altair/utils/data.py in limit_rows(data, max_rows) 82 &#34;than the maximum allowed ({}). &#34; 83 &#34;For information on how to plot larger datasets &#34; &gt; 84 &#34;in Altair, see the documentation&#34;.format(max_rows) 85 ) 86 return data MaxRowsError: The number of rows in your dataset is greater than the maximum allowed (5000). For information on how to plot larger datasets in Altair, see the documentation . alt.LayerChart(...) . New daily cases in other countries . Total cases per 100 000 .",
            "url": "https://ivonatau.github.io/covid19/jupyter/2020/03/29/poland.html",
            "relUrl": "/jupyter/2020/03/29/poland.html",
            "date": " • Mar 29, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://ivonatau.github.io/covid19/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}